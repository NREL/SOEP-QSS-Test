BouncingBall Model QSS Notes

As of OCT-master-8bb4688ea939e98a3f23be67236795ab5f2d3ac4 update released
in 2023/06 the self-dependency of v is added by OCT to the <Dependencies>
section of the XML file.

As of OCT 1.43.4 a dependency of v on itself needs to be added to the XML file
to get an accurate simulation. This represents the self-dependency in the
conditional "handler" event, where the value of v depends on pre(v), so v
must be updated in the FMU before evaluating the new value of v when the
event fires. Without the self-dependency the QSS simulations are semi-accurate
because the der(h) -> v dependency updates the value of v in the FMU at h
and the  h < 0  event indicator requantizations, but v is not updated at
the zero-crossing so its value in the FMU is not current. Models can be
constructed where the reinit/pre self-dependent variable is not updated by
other dependencies and thus the QSS results are highly inaccurate.

QSS3 simulation of BouncingBall can take large requantization steps since the
ball height is a quadratic function of time between bounce events. (Because QSS
doesn't get that trajectory information it can generate small 3rd order terms
in the height trajectory so there can be a few requantizations between bounces.)
With the large steps the predicted zero-crossing time can be slightly off due to
roundoff so a larger than default zMul value or, less efficient, a dtInf
deactivation control may be needed to get the FMU to detect all the zero
crossings.

The QSS simulations are more accurate than CVode due to QSS predictive zero
crossings.
